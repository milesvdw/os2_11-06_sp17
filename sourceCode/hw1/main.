/*******************************************************************************
* Team     : 11-06
* Term     : Spring 2017
* Class    : CS444
* Names    : Alex Wood, Miles Van de Wetering, Arman Hastings
* File Name: main.c
* Purpose  : This file implements the solution to the producer consumer problem
* Citations: Mersenne Twister: https://en.wikipedia.org/wiki/Mersenne_Twister
*          :
******************************************************************************/
#include "main.h"

void producer();
void consumer();

//Mersenne Twister MT19937 constants for 32-bit range
enum
{
   //Coefficiants for MT 19937-64
   N = 624, //degree of recurrence
   M = 397,  //middle word, an offset used in recurrence relation defining 
             //series x, 1<=m<=n
   R = 31, //Seperation point of one word, or number of bits of the lower
           //bit mask, 0<= r <= w - 1
   A = 0x9908b0df, //Coefficients of the rational normal form twist matrix
   F = 1812433253, //Value for MT19937 for 32-bit
   U = 11,  //Additional Mersenne Twister tempering bit shifts/masks
   //Twisted Generalised Feedback Shift Register = TGFSR 
   //(R) = Rational form
   S = 7,//TGFSR(R) tempering bit shifts
   B = 0x9d2c5680,//TGSFR(R) tempering bitmasks
   T = 15,//TGSFR(R) tempering bit shifts 
   C = 0xefc60000,//TGSFR(R) tempering bitmasks

   L = 18,

   MASK_LOWER = (1ull << R) - 1,
   MASK_UPPER = (1ull << R)
}

int main(int argc, char *argv)
{



	return 0;

}

/******************************************************************************
* Function: producer()
* Purpose: 
* Dependancies: 
* parameters: 
* Output: 
******************************************************************************/
void producer()
{

}

/******************************************************************************
* Function: consumer()
* Purpose:
* Dependancies:
* parameters:
* Output:
******************************************************************************/
void consumer()
{

}
